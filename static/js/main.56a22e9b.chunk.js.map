{"version":3,"sources":["components/AppProvider.jsx","components/NavBar/NavBar.jsx","components/HeroList/HeroList.jsx","components/FavList/FavList.jsx","components/Films/Films.jsx","components/Species/Species.jsx","components/SelectedHero/SelectedHero.jsx","App.jsx","index.js"],"names":["AppContext","React","createContext","heroes","setHeroes","favHeroes","setFavHeroes","selectedHero","setSelectedHero","AppProvider","children","useState","useEffect","a","serverData","i","fetch","serverResponce","json","data","results","push","console","error","allHeroes","reduce","acc","item","localStorage","setItem","JSON","stringify","localStorageHeroes","parse","getItem","fetchHeroes","localStorageFavHeroes","contextValue","Provider","value","NavBar","className","src","alt","to","HeroList","useContext","query","setQuery","searchedHeroes","setSearchedHeroes","filter","hero","name","toLowerCase","includes","trim","length","map","key","url","onClick","find","favHero","type","currentFavs","placeholder","onChange","event","target","FavList","Films","urls","films","setFilms","isLoading","setLoading","filmUrls","undefined","fetchFilms","film","title","release_date","Species","planetUrl","planet","setPlanet","loading","fetchPlanet","population","climate","SelectedHero","selectedHeroId","result","split","getId","height","mass","hair_color","skin_color","eye_color","birth_year","gender","path","homeworld","exact","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56a22e9b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const AppContext = React.createContext({\n  heroes: [],\n  setHeroes: () => {},\n  favHeroes: [],\n  setFavHeroes: () => {},\n  selectedHero: {},\n  setSelectedHero: () => {},\n\n});\n\nexport const AppProvider = ({ children }) => {\n  const [heroes, setHeroes] = useState([]);\n  const [favHeroes, setFavHeroes] = useState([]);\n  const [selectedHero, setSelectedHero] = useState({});\n\n  useEffect(() => {\n    async function fetchHeroes() {\n      const serverData = [];\n      // eslint-disable-next-line\n      for (let i = 1; i <= 9; i++) {\n        try {\n        // eslint-disable-next-line\n         const serverResponce = await fetch(\n            `https://swapi.dev/api/people/?page=${i}`,\n          );\n          // eslint-disable-next-line\n          const data = await serverResponce.json();\n          // eslint-disable-next-line\n          const results = await data.results;\n\n          serverData.push(results);\n        } catch (error) {\n          // eslint-disable-next-line\n          console.error('Error in ASYNC/AWAIT: ', error);\n        }\n      }\n\n      const allHeroes = serverData.reduce(\n        (acc, item) => ([...acc, ...item]), [],\n      );\n\n      setHeroes(allHeroes);\n      localStorage.setItem('Heroes', JSON.stringify(allHeroes));\n    }\n\n    localStorage.setItem('Heroes', JSON.stringify(null));\n    const localStorageHeroes = JSON.parse(localStorage.getItem('Heroes'));\n\n    if (!localStorageHeroes) {\n      fetchHeroes();\n    } else {\n      setHeroes(localStorageHeroes);\n    }\n\n    const localStorageFavHeroes = JSON.parse(\n      localStorage.getItem('Favoriteheroes'),\n    );\n\n    if (localStorageFavHeroes !== null) {\n      setFavHeroes(localStorageFavHeroes);\n    }\n  }\n  , []);\n\n  const contextValue = {\n    heroes,\n    setHeroes,\n    favHeroes,\n    setFavHeroes,\n    selectedHero,\n    setSelectedHero,\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n","import React from 'react';\nimport {\n  Link,\n} from 'react-router-dom';\n\nexport function NavBar() {\n  return (\n    <header className=\"header\">\n      <img\n        className=\"header__logo\"\n        src='https://i.pinimg.com/236x/df/24/be/df24beb816bd241cd9e944e2b336996f.jpg'\n        alt=\"starwars logo\"\n      />\n      <nav className=\"nav\">\n        <Link to=\"/favorites\" className=\"nav__link\">\n          Favorites\n        </Link>\n        <Link to=\"/\" className=\"nav__link\">\n          Home\n        </Link>\n\n      </nav>\n    </header>\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../AppProvider';\n\nexport const HeroList = () => {\n  const { heroes,\n    favHeroes,\n    setFavHeroes,\n    setSelectedHero } = useContext(AppContext);\n  const [query, setQuery] = useState('');\n  const [searchedHeroes, setSearchedHeroes] = useState([]);\n\n  useEffect(() => {\n    setSearchedHeroes(heroes\n      .filter((hero) => {\n        if (!query) {\n          return true;\n        }\n\n        if (\n          hero.name.toLowerCase().includes(query.toLowerCase().trim())\n        ) {\n          return true;\n        }\n\n        return false;\n      }));\n  }, [heroes, query]);\n\n  if (heroes.length === 0) {\n    return (\n      <div className=\"list\">\n        <h2 className=\"list__item\">Loading...</h2>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <main className=\"main\">\n        <ul className=\"list\">\n          {(searchedHeroes.length) ? (\n            searchedHeroes\n            .map(hero => (\n              <li key={hero.url} className=\"list__item\">\n                <Link\n                  className=\"list__link\"\n                  key={hero.name}\n                  to=\"/home/info\"\n                  onClick={() => setSelectedHero(hero)}\n                >\n                  {hero.name}\n                </Link>\n                {favHeroes.find(favHero => favHero.name === hero.name) ? (\n                  <button\n                    className=\" button list__button\"\n                    type=\"button\"\n                    onClick={() => {\n                      setFavHeroes(\n                        currentFavs => currentFavs.filter(\n                          favHero => favHero.name !== hero.name,\n                        ),\n                        localStorage.setItem('Favoriteheroes', JSON.stringify(favHeroes)),\n                      );\n                    }\n                    }\n                  >\n                    remove fav\n                  </button>\n                ) : (\n                  <button\n                    className=\" button list__button\"\n                    type=\"button\"\n                    onClick={() => {\n                      setFavHeroes(\n                        currentFavs => [...currentFavs, hero],\n                      );\n                      localStorage.setItem('Favoriteheroes', JSON.stringify(favHeroes));\n                    }}\n                  >\n                    add fav\n                  </button>\n                )}\n              </li>\n              )))\n            : (\n              <div className=\"not-found\">\n                <h1 className=\"not-found__title\"> Nothing is found</h1>\n                <img\n                  className=\"not-found__image\"\n                  src=\"https://i.pinimg.com/236x/5d/66/ec/5d66ec2b6592965f95407ff7bbaa39e5.jpg\"\n                  alt=\"baby yoda\"\n                />\n              </div>\n            )}\n        </ul>\n      </main>\n      <div className=\"app__sidebar\">\n        <input\n          className=\"input list__input\"\n          type=\"text\"\n          placeholder=\"hero name\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n      </div>\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../AppProvider';\n\nexport const FavList = () => {\n  const { favHeroes, setSelectedHero, setFavHeroes } = useContext(AppContext);\n\n  if (favHeroes.length === 0) {\n    return (\n      <div className=\"list\">\n        <h2 className=\"list__item\">Loading...</h2>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <main className=\"main\">\n        <ul className=\"list\">\n          {favHeroes.map(hero => (\n            <li key={hero.url} className=\"list__item\">\n              <Link\n                className=\"list__link\"\n                key={hero.name}\n                to=\"/home/info\"\n                onClick={() => setSelectedHero(hero)}\n              >\n                {hero.name}\n              </Link>\n              {favHeroes.find(favHero => favHero.name === hero.name) ? (\n                <button\n                  className=\" button list__button\"\n                  type=\"button\"\n                  onClick={() => {\n                    localStorage.setItem('Favoriteheroes', JSON.stringify(favHeroes));\n                    setFavHeroes(currentFavs => currentFavs.filter(\n                      favHero => favHero.name !== hero.name,\n                    ));\n                  }\n                }\n                >\n                  remove fav\n                </button>\n              ) : (\n                <button\n                  className=\" button list__button\"\n                  type=\"button\"\n                  onClick={() => {\n                    localStorage.setItem('Favoriteheroes', JSON.stringify(favHeroes));\n                    setFavHeroes(\n                      currentFavs => [...currentFavs, hero],\n                    );\n                  }\n                }\n                >\n                  add fav\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </main>\n      <div className=\"app__sidebar\">\n        <h1 className=\"app__sidebar-title\">\n          May the force be with you\n        </h1>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Films = ({ urls }) => {\n  const [films, setFilms] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchFilms(filmUrls) {\n      const serverData = [];\n\n      try {\n        if (filmUrls !== undefined) {\n        // eslint-disable-next-line\n        for (const url of filmUrls) {\n          // eslint-disable-next-line\n          const serverResponce = await fetch(\n              url,\n            );\n            // eslint-disable-next-line\n          const data = await serverResponce.json();\n            // eslint-disable-next-line\n          serverData.push(data);\n          }\n        }\n      } catch (error) {\n        // eslint-disable-next-line\n        console.error(error);\n      }\n\n      setFilms(serverData);\n      setLoading(false);\n    }\n\n    fetchFilms(urls);\n  }, [urls]);\n\n  if (isLoading) {\n    return (\n      <h1>Loading....</h1>\n    );\n  }\n\n  return (\n    <div className=\"info__section\">\n      {films.map(film => (\n        <div className=\"info__wrap\">\n          <div\n            className=\"info__title\"\n            key={film.title}\n          >\n            <h1>\n              &quot;\n              {film.title}\n              &quot;\n            </h1>\n          </div>\n          <div className=\"info__item\">\n            {`Release date: ${film.release_date}`}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nFilms.propTypes = {\n  urls: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Species = ({ planetUrl }) => {\n  const [planet, setPlanet] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchPlanet(url) {\n      try {\n        if (url !== undefined) {\n          const serverResponce = await fetch(\n            url,\n          );\n          const data = await serverResponce.json();\n\n          setPlanet(data);\n          setLoading(false);\n        }\n      } catch (error) {\n        // eslint-disable-next-line\n        console.error(error);\n      }\n    }\n\n    fetchPlanet(planetUrl);\n  }, [planetUrl]);\n\n  if (loading) {\n    return (\n      <h1> Loading ....</h1>\n    );\n  }\n\n  return (\n    <div className=\"info__section\">\n      <div className=\"info__wrap\">\n        <h1 className=\"info__title\">\n          {`Home world: ${planet.name}`}\n        </h1>\n        <div className=\"info__item\">\n          {`Population: ${planet.population}`}\n        </div>\n        <div className=\"info__item\">\n          {`Climate: ${planet.climate}`}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSpecies.propTypes = {\n  planetUrl: PropTypes.string.isRequired,\n};\n","import React, {useContext} from 'react';\nimport { AppContext } from '../AppProvider';\nimport { Switch, Link, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Films } from '../Films/Films';\nimport { Species } from '../Species/Species';\n\n\nexport const SelectedHero = () => {\n\n  const { selectedHero } = useContext(AppContext);\n\n  if (selectedHero===undefined) {\n    return (\n      <h1>Loading</h1>\n    )\n  }\n  const getId = (url) => {\n    if (url) {\n      const result = url.split('/');\n\n      return result[result.length - 2];\n    }\n\n    return 0;\n  };\n\n  const selectedHeroId = getId(selectedHero.url);\n\n  return (\n    <div className=\"info\">\n      <div className=\"info__section box\">\n        <img\n          className=\"info__image\"\n      // eslint-disable-next-line\n        src={`https://starwars-visualguide.com/assets/img/characters/${selectedHeroId}.jpg`}\n          alt={selectedHero.name}\n        />\n        <h1 className=\"info__title\">{selectedHero.name}</h1>\n        <div className=\"info__item\">{`Height:  ${selectedHero.height}`}</div>\n        <div className=\"info__item\">{`Mass:  ${selectedHero.mass}`}</div>\n        <div className=\"info__item\">{`Hair color:  ${selectedHero.hair_color}`}</div>\n        <div className=\"info__item\">{`Skin color:  ${selectedHero.skin_color}`}</div>\n        <div className=\"info__item\">{`Eye color:  ${selectedHero.eye_color}`}</div>\n        <div className=\"info__item\">{`Birth year:  ${selectedHero.birth_year}`}</div>\n        <div className=\"info__item\">{`Cender:  ${selectedHero.gender}`}</div>\n      </div>\n      <div className=\"info__section\">\n        <div className=\"info__tabs\">\n          <Link\n            to=\"/home/info/\"\n            className=\"info__tab\"\n          >\n            Films\n          </Link>\n          <Link\n            to=\"/home/info/planet\"\n            className=\"info__tab\"\n          >\n            Planet\n          </Link>\n        </div>\n        <div>\n          <Switch>\n            <Route path=\"/home/info/planet\">\n              <div className=\"info__details\">\n                <Species planetUrl={selectedHero.homeworld} />\n              </div>\n            </Route>\n            <Route path=\"/home/info/\" exact>\n              <div className=\"info__details\">\n                <Films urls={selectedHero.films} />\n              </div>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSelectedHero.propTypes = {\n  SelectedHero: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    height: PropTypes.string.isRequired,\n    mass: PropTypes.string.isRequired,\n    hair_color: PropTypes.string.isRequired,\n    skin_color: PropTypes.string.isRequired,\n    eye_color: PropTypes.string.isRequired,\n    birth_year: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    films: PropTypes.arrayOf(\n      PropTypes.string.isRequired,\n    ),\n    homeworld: PropTypes.shape().isRequired,\n  }),\n};\n","import React from 'react';\nimport { AppProvider } from './components/AppProvider';\nimport { Route, Switch } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\nimport { HeroList } from './components/HeroList/HeroList';\nimport { FavList } from './components/FavList/FavList';\nimport { SelectedHero } from './components/SelectedHero/SelectedHero';\nimport './App.scss';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst App = () => {\n  return (\n    <AppProvider>\n    <div className=\"app\">\n      <NavBar />\n      <div className=\"app__content\">\n        <Switch>\n          <Route path=\"/favorites\">\n            <FavList />\n          </Route>\n          <Route path=\"/home/info\">\n            <SelectedHero/>\n          </Route>\n          <Route path=\"/\" exact>\n            <HeroList />\n          </Route>\n          <Redirect to='/' />\n        </Switch>\n      </div>\n    </div>\n    </AppProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}